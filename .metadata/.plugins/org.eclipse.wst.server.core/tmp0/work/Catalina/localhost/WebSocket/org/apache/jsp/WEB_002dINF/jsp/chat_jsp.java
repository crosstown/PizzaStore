/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2016-05-01 21:51:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, maximum-scale=1\" />\r\n");
      out.write("<meta name=\"description\" content=\"\" />\r\n");
      out.write("<meta name=\"author\" content=\"\" />\r\n");
      out.write("<!--[if IE]>\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<title>My Chat</title>\r\n");
      out.write("<!-- BOOTSTRAP CORE STYLE CSS -->\r\n");
      out.write("<link href=\"assets/css/bootstrap.css\" rel=\"stylesheet\" />\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar webSocket;\r\n");
      out.write("\tvar messages = document.getElementById(\"messages\");\r\n");
      out.write("\tvar newConnect = '';\r\n");
      out.write("\tvar ip = document.getElementById(\"serverIP\");\r\n");
      out.write("\twindow.onload = function() {\r\n");
      out.write("\t\tsetInterval(openSocket(), 5000);\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction openSocket() {\r\n");
      out.write("\t\tif (webSocket !== undefined\r\n");
      out.write("\t\t\t\t&& webSocket.readyState !== WebSocket.CLOSED) {\r\n");
      out.write("\t\t\twriteResponse(\"WebSocket is already opened.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar ip = document.getElementById(\"serverIP\").value;\r\n");
      out.write("\t\twebSocket = new WebSocket(\"ws://\" + ip + \":8080/chat/chatserver\");\r\n");
      out.write("\r\n");
      out.write("\t\twebSocket.onopen = function(event) {\r\n");
      out.write("\t\t\tvar user = document.getElementById(\"thisUser\").value;\r\n");
      out.write("\t\t\tvar image = document.getElementById(\"img\").value;\r\n");
      out.write("\t\t\tnewConnect = '<li class=\"media\">'\r\n");
      out.write("\t\t\t\t\t+ '<div class=\"media-body\">'\r\n");
      out.write("\t\t\t\t\t+ '<div class=\"media\">'\r\n");
      out.write("\t\t\t\t\t+ '<a class=\"pull-left\" href=\"#\">'\r\n");
      out.write("\t\t\t\t\t+ '<img class=\"media-object img-circle \" style=\"max-height:40px;\" src=\"assets/img/' + image + '.png\" />'\r\n");
      out.write("\t\t\t\t\t+ '</a>' + '<div class=\"media-body\" >' + '<h5>' + user\r\n");
      out.write("\t\t\t\t\t+ '| User </h5>' + '<small class=\"text-muted\">'\r\n");
      out.write("\t\t\t\t\t+ new Date() + '</small>' + '</div>' + '</div>' + '</div>'\r\n");
      out.write("\t\t\t\t\t+ '</li>';\r\n");
      out.write("\t\t\tvar users = document.getElementById(\"connectedusers\");\r\n");
      out.write("\t\t\tusers.innerHTML = users.innerHTML + \"<br/><li>\" + newConnect\r\n");
      out.write("\t\t\t\t\t+ \"<li>\";\r\n");
      out.write("\t\t\tif (event.data === undefined)\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\twebSocket.onmessage = function(event) {\r\n");
      out.write("\t\t\t// Determine if MSSG or CONN message\r\n");
      out.write("\t\t\tvar mssg = event.data;\r\n");
      out.write("\t\t\tif (mssg.startsWith('MSSG')) {\r\n");
      out.write("\t\t\t\tmssg = mssg.substring(5); // simple mssg\r\n");
      out.write("\t\t\t\twriteResponse(mssg);\r\n");
      out.write("\t\t\t} else if (mssg.startsWith('CONN')) {\r\n");
      out.write("\t\t\t\tmssg = mssg.substring(5); // new connection\r\n");
      out.write("\t\t\t\tvar users = document.getElementById(\"connectedusers\");\r\n");
      out.write("\t\t\t\tusers.innerHTML = users.innerHTML + \"<br/><li>\" + mssg + \"<li>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\r\n");
      out.write("\t\twebSocket.onclose = function(event) {\r\n");
      out.write("\t\t\twriteResponse(\"Connection closed\");\r\n");
      out.write("\t\t\talert(\"Connection closed\");\r\n");
      out.write("\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t// openSocket\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction send() {\r\n");
      out.write("\t\tvar text = document.getElementById(\"mytext\").value;\r\n");
      out.write("\t\tvar user = document.getElementById(\"thisUser\").value;\r\n");
      out.write("\t\tvar image = document.getElementById(\"img\").value;\r\n");
      out.write("\t\tif (text == \"\") {\r\n");
      out.write("\t\t\talert(\"no message!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar fullmssg = 'MSSG:<li class=\"media\">'\r\n");
      out.write("\t\t\t\t+ '<div class=\"media-body\">'\r\n");
      out.write("\t\t\t\t+ '<div class=\"media\">'\r\n");
      out.write("\t\t\t\t+ '<a class=\"pull-left\" href=\"#\">'\r\n");
      out.write("\t\t\t\t+ '<img class=\"media-object img-circle \" src=\"assets/img/' +\r\n");
      out.write("image + '.png\" />'\r\n");
      out.write("\t\t\t\t+ '</a>' + '<div class=\"media-body\" >' + text + '<br />'\r\n");
      out.write("\t\t\t\t+ '<small class=\"text-muted\">' + user + ' | ' + new Date()\r\n");
      out.write("\t\t\t\t+ '</small>' + '<hr />' + '</div>' + '</div>' + '</div>'\r\n");
      out.write("\t\t\t\t+ '</li>';\r\n");
      out.write("\t\t// send to all others via the Server Endpoint\r\n");
      out.write("\t\twebSocket.send(fullmssg);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// send mssg to yourself\r\n");
      out.write("\t\twriteResponse(fullmssg.substring(5));\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction closeSocket() {\r\n");
      out.write("\t\twebSocket.close();\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction writeResponse(theMessage) {\r\n");
      out.write("\t\tvar mssg = document.getElementById(\"messages\");\r\n");
      out.write("\t\tvar text = theMessage;\r\n");
      out.write("\t\tmssg.innerHTML = \"<br/><li>\" + text + \"<li>\" + mssg.innerHTML;\r\n");
      out.write("\t\tdocument.getElementById(\"mytext\").value = \"\";\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"font-family: Verdana\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"thisUser\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"img\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"serverIP\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.ip}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row \" style=\"padding-top: 40px;\">\r\n");
      out.write("\t\t\t<h3 class=\"text-center\">My Chat: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\r\n");
      out.write("\t\t\t<br /> <br />\r\n");
      out.write("\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-info\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">RECENT CHAT HISTORY</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<ul id=\"messages\" class=\"media-list\">\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"media\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"media-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"media\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a class=\"pull-left\" href=\"#\"> <img\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"media-object img-circle \"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tsrc=\"assets/img/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".png\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"media-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tOnline <br /> <small class=\"text-muted\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write('|');
      out.write(' ');
      out.print( new java.util.Date() );
      out.write("</small>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-footer\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<input id=\"mytext\" type=\"text\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"Enter Message\" /> <span class=\"input-group-btn\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn btn-info\" type=\"button\" onClick=\"send()\">SEND</button>\r\n");
      out.write("\t\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-4\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-primary\">\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-heading\">ONLINE USERS</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<ul id=\"connectedusers\" class=\"media-list\">\r\n");
      out.write("\t\t\t\t\t\t\t<!-- new users go here -->\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
